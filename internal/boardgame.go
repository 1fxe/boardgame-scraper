// boardgame
package internal

const (
	CategoriesURLS = "categoriesURLS"
	MechanicsURLS  = "mechanicsURLS"
	Categories     = "categories"
	Mechanics      = "mechanics"
)

type Data struct {
	Name        string `json:"dataName"`
	Description string `json:"dataDescription"`
}

type Range struct {
	Min uint16 `json:"min"`
	Max uint16 `json:"max"`
}

type Game struct {
	PrimaryName  string `json:"name"`
	YearReleased uint16 `json:"yearReleased"`
	NoPlayers    Range  `json:"noPlayers"`
	PlayTime     Range  `json:"playTime"`
	Age          string `json:"age"`
	Categories   []Data `json:"categories"`
	Mechanisms   []Data `json:"mechanisms"`
}

type AutoGenerated struct {
	Item struct {
		Itemdata []struct {
			Datatype        string `json:"datatype,omitempty"`
			Fieldname       string `json:"fieldname,omitempty"`
			Title           string `json:"title,omitempty"`
			Primaryname     bool   `json:"primaryname,omitempty"`
			Required        bool   `json:"required,omitempty"`
			Unclickable     bool   `json:"unclickable,omitempty"`
			Fullcredits     bool   `json:"fullcredits,omitempty"`
			Subtype         string `json:"subtype,omitempty"`
			Keyname         string `json:"keyname,omitempty"`
			Alternate       bool   `json:"alternate,omitempty"`
			OtherObjecttype string `json:"other_objecttype,omitempty"`
			OtherSubtype    string `json:"other_subtype,omitempty"`
			LookupSubtype   string `json:"lookup_subtype,omitempty"`
			Linktype        string `json:"linktype,omitempty"`
			SelfPrefix      string `json:"self_prefix,omitempty"`
		} `json:"itemdata,omitempty"`
		Relatedlinktypes []interface{} `json:"relatedlinktypes,omitempty"`
		LinkedforumTypes []struct {
			Title            string      `json:"title,omitempty"`
			LinkedforumIndex string      `json:"linkedforum_index,omitempty"`
			LinkdataIndex    string      `json:"linkdata_index,omitempty"`
			RequiredSubtype  interface{} `json:"required_subtype,omitempty"`
		} `json:"linkedforum_types,omitempty"`
		Subtypename string `json:"subtypename,omitempty"`
		Stats       struct {
			Playmonth     string `json:"playmonth,omitempty"`
			Numplays      int    `json:"numplays,omitempty"`
			NumplaysMonth int    `json:"numplays_month,omitempty"`
			Numfans       int    `json:"numfans,omitempty"`
		} `json:"stats,omitempty"`
		Relatedcounts struct {
			News    int `json:"news,omitempty"`
			Blogs   int `json:"blogs,omitempty"`
			Weblink int `json:"weblink,omitempty"`
			Podcast int `json:"podcast,omitempty"`
		} `json:"relatedcounts,omitempty"`
		Itemid      int      `json:"itemid,omitempty"`
		Objecttype  string   `json:"objecttype,omitempty"`
		Objectid    int      `json:"objectid,omitempty"`
		Label       string   `json:"label,omitempty"`
		Labelpl     string   `json:"labelpl,omitempty"`
		Type        string   `json:"type,omitempty"`
		ID          string   `json:"id,omitempty"`
		Href        string   `json:"href,omitempty"`
		Subtype     string   `json:"subtype,omitempty"`
		Subtypes    []string `json:"subtypes,omitempty"`
		Versioninfo struct {
			Gamepageorderurl interface{} `json:"gamepageorderurl,omitempty"`
			Shopifyitem      interface{} `json:"shopifyitem,omitempty"`
		} `json:"versioninfo,omitempty"`
		Name          string      `json:"name,omitempty"`
		Alternatename interface{} `json:"alternatename,omitempty"`
		Links         struct {
			Boardgame []struct {
				Name        string `json:"name,omitempty"`
				Objecttype  string `json:"objecttype,omitempty"`
				Objectid    string `json:"objectid,omitempty"`
				Primarylink int    `json:"primarylink,omitempty"`
				Itemstate   string `json:"itemstate,omitempty"`
				Href        string `json:"href,omitempty"`
			} `json:"boardgame,omitempty"`
		} `json:"links,omitempty"`
		Linkcounts struct {
			Boardgame int `json:"boardgame,omitempty"`
		} `json:"linkcounts,omitempty"`
		Secondarynamescount int `json:"secondarynamescount,omitempty"`
		Alternatenamescount int `json:"alternatenamescount,omitempty"`
		Primaryname         struct {
			Nameid      string `json:"nameid,omitempty"`
			Name        string `json:"name,omitempty"`
			Sortindex   string `json:"sortindex,omitempty"`
			Primaryname string `json:"primaryname,omitempty"`
			Translit    string `json:"translit,omitempty"`
		} `json:"primaryname,omitempty"`
		Alternatenames []interface{} `json:"alternatenames,omitempty"`
		Description    string        `json:"description,omitempty"`
		Wiki           string        `json:"wiki,omitempty"`
		Website        struct {
			URL bool `json:"url,omitempty"`
		} `json:"website,omitempty"`
		Imageid string `json:"imageid,omitempty"`
		Images  struct {
			Thumb        string `json:"thumb,omitempty"`
			Micro        string `json:"micro,omitempty"`
			Square       string `json:"square,omitempty"`
			Squarefit    string `json:"squarefit,omitempty"`
			Tallthumb    string `json:"tallthumb,omitempty"`
			Previewthumb string `json:"previewthumb,omitempty"`
			Square200    string `json:"square200,omitempty"`
		} `json:"images,omitempty"`
		Imagepagehref string `json:"imagepagehref,omitempty"`
		Imageurl      string `json:"imageurl,omitempty"`
		ImageSets     struct {
			Square100 struct {
				Src   string `json:"src,omitempty"`
				Src2X string `json:"src@2x,omitempty"`
			} `json:"square100,omitempty"`
			Mediacard struct {
				Src   string `json:"src,omitempty"`
				Src2X string `json:"src@2x,omitempty"`
			} `json:"mediacard,omitempty"`
		} `json:"imageSets,omitempty"`
		Itemstate   string      `json:"itemstate,omitempty"`
		PromotedAd  interface{} `json:"promoted_ad,omitempty"`
		SpecialUser interface{} `json:"special_user,omitempty"`
	} `json:"item,omitempty"`
	Media struct {
		Files struct {
			Numitems string `json:"numitems,omitempty"`
		} `json:"files,omitempty"`
		Images struct {
			Numitems int `json:"numitems,omitempty"`
		} `json:"images,omitempty"`
		Videos struct {
			Numitems int `json:"numitems,omitempty"`
		} `json:"videos,omitempty"`
	} `json:"media,omitempty"`
	Videogalleries struct {
		Galleries []struct {
			Type string `json:"type,omitempty"`
			Name string `json:"name,omitempty"`
		} `json:"galleries,omitempty"`
	} `json:"videogalleries,omitempty"`
}
